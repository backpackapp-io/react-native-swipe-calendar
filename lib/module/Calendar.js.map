{"version":3,"sources":["Calendar.tsx"],"names":["React","useCallback","useEffect","useImperativeHandle","useMemo","useRef","addMonths","differenceInCalendarMonths","isSameMonth","isEqual","InfinitePager","DEFAULT_THEME","defaultPageInterpolator","CalendarContext","MonthPage","useDerivedValue","useSharedValue","Calendar","ref","selectedDate","onDateSelect","onMonthChange","currentDate","HeaderComponent","DayLabelComponent","DayComponent","theme","monthBuffer","minDate","maxDate","pageInterpolator","simultaneousHandlers","monthAnimCallbackNode","gesturesDisabled","animationConfig","markedDates","markingType","initialDateRef","Date","pagerRef","currentDateRef","currentPageRef","pageCallbackNode","minPageIndex","Infinity","current","maxPageIndex","onMonthChangeRef","fullThemeObj","fullThemeRef","fullTheme","updatedTheme","incrementMonth","options","animated","incrementPage","decrementMonth","decrementPage","setMonth","date","page","setPage","onPageChange","pg","currentMonth","setDate","providerValue","referenceDate","pageInterpolatorInternal","params","Object","assign","undefined","getMonth","AnimUpdater","initialMonthIndex","rawVal","value","modVal","memo","forwardRef"],"mappings":"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","sourcesContent":["import React, { useCallback, useEffect, useImperativeHandle, useMemo, useRef } from \"react\";\nimport { addMonths, differenceInCalendarMonths, isSameMonth } from \"date-fns\";\nimport { isEqual } from \"lodash\";\nimport InfinitePager, { InfinitePagerImperativeApi, PageInterpolatorParams } from \"react-native-infinite-pager\";\nimport { DEFAULT_THEME, defaultPageInterpolator } from \"./defaults\";\nimport { CalendarImperativeApi, CalendarProps, ImperativeApiOptions } from \"./types\";\nimport { CalendarContext } from \"./context\";\nimport { MonthPage } from \"./Month\";\nimport Animated, { useDerivedValue, useSharedValue } from \"react-native-reanimated\";\n\nfunction Calendar(\n    {\n        selectedDate,\n        onDateSelect,\n        onMonthChange,\n        currentDate,\n        HeaderComponent,\n        DayLabelComponent,\n        DayComponent,\n        theme = {},\n        monthBuffer = 1,\n        minDate,\n        maxDate,\n        pageInterpolator = defaultPageInterpolator,\n        simultaneousHandlers,\n        monthAnimCallbackNode,\n        gesturesDisabled,\n        animationConfig,\n        markedDates,\n        markingType\n    }: CalendarProps,\n    ref: React.ForwardedRef<CalendarImperativeApi>\n) {\n    const initialDateRef = useRef(currentDate || new Date());\n    const pagerRef = useRef<InfinitePagerImperativeApi>(null);\n    const currentDateRef = useRef(currentDate);\n    const currentPageRef = useRef(0);\n\n    const pageCallbackNode = useSharedValue(0);\n\n    const minPageIndex = useMemo(() => {\n        if (!minDate) return -Infinity;\n        return differenceInCalendarMonths(initialDateRef.current, minDate) * -1;\n    }, [minDate]);\n\n    const maxPageIndex = useMemo(() => {\n        if (!maxDate) return Infinity;\n        return differenceInCalendarMonths(initialDateRef.current, maxDate) * -1;\n    }, [maxDate]);\n\n    const onMonthChangeRef = useRef(onMonthChange);\n    onMonthChangeRef.current = onMonthChange;\n\n    const fullThemeObj = {\n        ...DEFAULT_THEME,\n        ...theme\n    };\n    const fullThemeRef = useRef(fullThemeObj);\n\n    const fullTheme: typeof DEFAULT_THEME = useMemo(() => {\n        const updatedTheme = { ...DEFAULT_THEME, ...theme };\n        // If the theme object is defined inline, we only want to trigger context updates\n        // if the values contained actually change.\n        if (isEqual(fullThemeRef.current, updatedTheme)) {\n            return fullThemeRef.current;\n        } else {\n            fullThemeRef.current = updatedTheme;\n            return updatedTheme;\n        }\n    }, [theme]);\n\n    useImperativeHandle(\n        ref,\n        () => ({\n            incrementMonth: (options?: ImperativeApiOptions) => {\n                const animated = options?.animated ?? true;\n                pagerRef.current?.incrementPage({ animated });\n            },\n            decrementMonth: (options?: ImperativeApiOptions) => {\n                const animated = options?.animated ?? true;\n                pagerRef.current?.decrementPage({ animated });\n            },\n            setMonth: (date: Date, options?: ImperativeApiOptions) => {\n                const animated = options?.animated ?? false;\n                const page = differenceInCalendarMonths(date, initialDateRef.current);\n                pagerRef.current?.setPage(page, { animated });\n            }\n        }),\n        []\n    );\n\n    useEffect(() => {\n        // Hard set the page if the passed-in currentDate changes and the calendar isn't already displaying that month.\n        if (\n            currentDate &&\n            currentDateRef.current &&\n            !isSameMonth(currentDate, currentDateRef.current)\n        ) {\n            const page = differenceInCalendarMonths(\n                currentDate,\n                initialDateRef.current\n            );\n            if (page === currentPageRef.current) return;\n            pagerRef.current?.setPage(page, { animated: false });\n        }\n\n        currentDateRef.current = currentDate;\n    }, [currentDate]);\n\n    const onPageChange = useCallback((pg: number) => {\n        currentPageRef.current = pg;\n        const currentMonth = addMonths(initialDateRef.current, pg);\n        currentMonth.setDate(1);\n        onMonthChangeRef.current?.(currentMonth);\n    }, []);\n\n    const providerValue = useMemo(\n        () => ({\n            referenceDate: initialDateRef.current,\n            selectedDate,\n            onDateSelect,\n            HeaderComponent,\n            DayLabelComponent,\n            DayComponent,\n            theme: fullTheme,\n            pageInterpolator,\n            markedDates,\n            markingType\n        }),\n        [\n            selectedDate,\n            onDateSelect,\n            HeaderComponent,\n            DayLabelComponent,\n            DayComponent,\n            fullTheme,\n            pageInterpolator,\n            markedDates,\n            markingType\n        ]\n    );\n\n    const pageInterpolatorInternal = useCallback(\n        (params: PageInterpolatorParams) => {\n            \"worklet\";\n            return pageInterpolator(Object.assign({}, params, { theme: fullTheme }));\n        },\n        [fullTheme, pageInterpolator]\n    );\n\n    return (\n        <CalendarContext.Provider value={providerValue}>\n            <InfinitePager\n                ref={pagerRef}\n                PageComponent={MonthPage}\n                pageBuffer={monthBuffer}\n                onPageChange={onPageChange}\n                minIndex={minPageIndex}\n                maxIndex={maxPageIndex}\n                pageInterpolator={pageInterpolatorInternal}\n                simultaneousHandlers={simultaneousHandlers}\n                pageCallbackNode={monthAnimCallbackNode ? pageCallbackNode : undefined}\n                gesturesDisabled={gesturesDisabled}\n                animationConfig={animationConfig}\n            />\n            {monthAnimCallbackNode && (\n                <AnimUpdater\n                    initialMonthIndex={initialDateRef.current.getMonth()}\n                    monthAnimCallbackNode={monthAnimCallbackNode}\n                    pageCallbackNode={pageCallbackNode}\n                />\n            )}\n        </CalendarContext.Provider>\n    );\n}\n\n// Separate updater component so we only take the (slight) performance hit if the user provides a callback node\nfunction AnimUpdater({\n                         initialMonthIndex,\n                         pageCallbackNode,\n                         monthAnimCallbackNode\n                     }: {\n    initialMonthIndex: number;\n    pageCallbackNode: Animated.SharedValue<number>;\n    monthAnimCallbackNode: Animated.SharedValue<number>;\n}) {\n    useDerivedValue(() => {\n        const rawVal = pageCallbackNode.value + initialMonthIndex;\n        let modVal = rawVal % 12;\n        if (modVal < 0) {\n            modVal = 12 + modVal;\n        }\n        monthAnimCallbackNode.value = modVal;\n    }, [pageCallbackNode, initialMonthIndex]);\n\n    return null;\n}\n\nexport default React.memo(React.forwardRef(Calendar));\n"]}