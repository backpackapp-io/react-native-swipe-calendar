{"version":3,"sources":["defaults.ts"],"names":["Platform","Extrapolate","interpolate","DEFAULT_FONT_FAMILY","OS","DEFAULT_FONT_COLOR_ACTIVE","DEFAULT_FONT_COLOR_INACTIVE","DEFAULT_THEME","todayIndicatorDotColor","selectedDayBackgroundColor","selectedDayFontColor","headerFontFamily","headerFontColor","headerFontSize","headerTextTransform","headerDateFormat","dayLabelFontFamily","dayLabelColor","dayLabelFontSize","dayLabelTextTransform","dayLabelDateFormat","dayFontFamily","dayFontColor","dayInactiveFontColor","daySelectedFontColor","dayFontSize","inactiveOpacity","defaultPageInterpolator","focusAnim","theme","pageWidth","inputRange","translateX","value","opacity","CLAMP","transform"],"mappings":"AAAA,SAASA,QAAT,QAAyB,cAAzB;AACA,SACEC,WADF,EAEEC,WAFF,QAIO,yBAJP;AAOA,MAAMC,mBAAmB,GACvBH,QAAQ,CAACI,EAAT,KAAgB,KAAhB,GAAwB,gBAAxB,GAA2C,YAD7C;AAEA,MAAMC,yBAAyB,GAAG,OAAlC;AACA,MAAMC,2BAA2B,GAAG,MAApC;AAIA,OAAO,MAAMC,aAAa,GAAG;AAC3BC,EAAAA,sBAAsB,EAAE,QADG;AAE3BC,EAAAA,0BAA0B,EAAE,uBAFD;AAG3BC,EAAAA,oBAAoB,EAAEL,yBAHK;AAK3BM,EAAAA,gBAAgB,EAAER,mBALS;AAM3BS,EAAAA,eAAe,EAAEP,yBANU;AAO3BQ,EAAAA,cAAc,EAAE,EAPW;AAQ3BC,EAAAA,mBAAmB,EAAE,YARM;AAS3BC,EAAAA,gBAAgB,EAAE,WATS;AAW3BC,EAAAA,kBAAkB,EAAEb,mBAXO;AAY3Bc,EAAAA,aAAa,EAAEZ,yBAZY;AAa3Ba,EAAAA,gBAAgB,EAAE,EAbS;AAc3BC,EAAAA,qBAAqB,EAAE,WAdI;AAe3BC,EAAAA,kBAAkB,EAAE,QAfO;AAiB3BC,EAAAA,aAAa,EAAElB,mBAjBY;AAkB3BmB,EAAAA,YAAY,EAAEjB,yBAlBa;AAmB3BkB,EAAAA,oBAAoB,EAAEjB,2BAnBK;AAoB3BkB,EAAAA,oBAAoB,EAAEnB,yBApBK;AAqB3BoB,EAAAA,WAAW,EAAE,EArBc;AAuB3BC,EAAAA,eAAe,EAAE;AAvBU,CAAtB;AA0BP,OAAO,SAASC,uBAAT,OAIiE;AACtE;;AADsE,MAJhC;AACtCC,IAAAA,SADsC;AAEtCC,IAAAA,KAFsC;AAGtCC,IAAAA;AAHsC,GAIgC;AAGtE,QAAMC,UAAU,GAAG,CAAC,CAAC,CAAF,EAAK,CAAL,EAAQ,CAAR,CAAnB;AAEA,QAAMC,UAAU,GAAG9B,WAAW,CAAC0B,SAAS,CAACK,KAAX,EAAkBF,UAAlB,EAA8B,CAC1D,CAACD,SAAS,CAACG,KAD+C,EAE1D,CAF0D,EAG1DH,SAAS,CAACG,KAHgD,CAA9B,CAA9B;AAMA,QAAMC,OAAO,GAAGhC,WAAW,CACzB0B,SAAS,CAACK,KADe,EAEzBF,UAFyB,EAGzB,CAACF,KAAK,CAACH,eAAP,EAAwB,CAAxB,EAA2BG,KAAK,CAACH,eAAjC,CAHyB,EAIzBzB,WAAW,CAACkC,KAJa,CAA3B,CAXsE,CAkBtE;;AACA,MAAInC,QAAQ,CAACI,EAAT,KAAgB,SAAhB,IAA6BwB,SAAS,CAACK,KAAV,GAAkB,GAAnD,EAAwD;AACtD;AACA;AACA,WAAO;AAAEG,MAAAA,SAAS,EAAE,CAAC;AAAEJ,QAAAA;AAAF,OAAD;AAAb,KAAP;AACD;;AAED,SAAO;AACLI,IAAAA,SAAS,EAAE,CAAC;AAAEJ,MAAAA;AAAF,KAAD,CADN;AAELE,IAAAA;AAFK,GAAP;AAID","sourcesContent":["import { Platform } from \"react-native\";\nimport {\n  Extrapolate,\n  interpolate,\n  useAnimatedStyle,\n} from \"react-native-reanimated\";\nimport { CalendarPageInterpolatorParams } from \"./types\";\n\nconst DEFAULT_FONT_FAMILY =\n  Platform.OS === \"ios\" ? \"Helvetica Neue\" : \"sans-serif\";\nconst DEFAULT_FONT_COLOR_ACTIVE = \"black\";\nconst DEFAULT_FONT_COLOR_INACTIVE = \"gray\";\n\ntype TextTransform = \"uppercase\" | \"lowercase\" | \"capitalize\" | \"none\";\n\nexport const DEFAULT_THEME = {\n  todayIndicatorDotColor: \"tomato\",\n  selectedDayBackgroundColor: \"rgba(0, 0, 255, 0.25)\",\n  selectedDayFontColor: DEFAULT_FONT_COLOR_ACTIVE,\n\n  headerFontFamily: DEFAULT_FONT_FAMILY,\n  headerFontColor: DEFAULT_FONT_COLOR_ACTIVE,\n  headerFontSize: 24,\n  headerTextTransform: \"capitalize\" as TextTransform,\n  headerDateFormat: \"MMMM yyyy\",\n\n  dayLabelFontFamily: DEFAULT_FONT_FAMILY,\n  dayLabelColor: DEFAULT_FONT_COLOR_ACTIVE,\n  dayLabelFontSize: 12,\n  dayLabelTextTransform: \"uppercase\" as TextTransform,\n  dayLabelDateFormat: \"EEEEEE\",\n\n  dayFontFamily: DEFAULT_FONT_FAMILY,\n  dayFontColor: DEFAULT_FONT_COLOR_ACTIVE,\n  dayInactiveFontColor: DEFAULT_FONT_COLOR_INACTIVE,\n  daySelectedFontColor: DEFAULT_FONT_COLOR_ACTIVE,\n  dayFontSize: 12,\n\n  inactiveOpacity: 1,\n};\n\nexport function defaultPageInterpolator({\n  focusAnim,\n  theme,\n  pageWidth,\n}: CalendarPageInterpolatorParams): ReturnType<typeof useAnimatedStyle> {\n  \"worklet\";\n\n  const inputRange = [-1, 0, 1];\n\n  const translateX = interpolate(focusAnim.value, inputRange, [\n    -pageWidth.value,\n    0,\n    pageWidth.value,\n  ]);\n\n  const opacity = interpolate(\n    focusAnim.value,\n    inputRange,\n    [theme.inactiveOpacity, 1, theme.inactiveOpacity],\n    Extrapolate.CLAMP\n  );\n\n  // Before pagewidth is known focusAnim will be a ridiculously high number\n  if (Platform.OS === \"android\" && focusAnim.value > 999) {\n    // Android has an issue where on initialization, opacity will get stuck at the initial opaicty,\n    // even if it immediately updates later. Hack fix is to omit it from the initial style.\n    return { transform: [{ translateX }] };\n  }\n\n  return {\n    transform: [{ translateX }],\n    opacity,\n  };\n}\n"]}